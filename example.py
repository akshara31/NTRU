from ntru import Ntru
import random

#Bob
print("\nUser 1 will Generate his Public Key using Parameters")

N = int(input("\nEnter N value : "))
p = int(input("Enter value of p : "))
q = int(input("Enter value of q : "))

# print("N=7, p=29 and q=491531")
print(f"\nN = {N}, p = {p} and q = {q}")
Bob = Ntru(N, p, q)
# f(x) = 1 + x - x^2 - x^4 + x^5
f = [1, 1, -1, 0, -1, 1]
# g(x) = -1 + x^2 + x^3 -x^6
g = [-1, 0, 1, 1, 0, 0, -1]
d = 2
print("\nf(x)= ", f)
print("g(x)= ", g)
print("d   = ", d)
Bob.genPublicKey(f, g, 2)
pub_key = Bob.getPublicKey()
print("Public Key Generated by Bob: ", pub_key)
print("\n--------------------------------------------------------------------------------------------------\n")
#Alice
Alice = Ntru(N, p, q)
Alice.setPublicKey(pub_key)
msg = []

# number of elements as input
n = int(input("Enter number of Elements : "))

# iterating till the range
for i in range(0, n):
    ele = int(input())

    msg.append(ele)  # adding the element

print(msg)
#input msg = [1, 1, 0, 0, 1, 0, 1]

print("Alice's Original Message   : ", msg)
# ranPol = [-1, -1, 1, 1]
ranPol =  [random.randint(-1, 1) for _ in range(4)]
print("Alice's Random Polynomial  : ", ranPol)
encrypt_msg = Alice.encrypt(msg,ranPol)
print("Encrypted Message          : ", encrypt_msg)
print("\n--------------------------------------------------------------------------------------------------\n")

#BOB
print("Bob decrypts message sent to him")
print("Decrypted Message          : ", Bob.decrypt(encrypt_msg))

